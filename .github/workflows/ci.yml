name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Detect what parts of the monorepo changed
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
      root: ${{ steps.changes.outputs.root }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
            root:
              - 'package.json'
              - 'package-lock.json'
              - '.github/**'

  # Quality checks and tests for backend
  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true' || needs.detect-changes.outputs.root == 'true'
    
    strategy:
      matrix:
        # Test on the .nvmrc version and one additional version for compatibility
        node-version: [18, 20]
    
    defaults:
      run:
        working-directory: ./
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type check backend
      run: npm run type-check --workspace=backend
      
    - name: Lint backend
      run: npm run lint --workspace=backend
      
    - name: Format check backend
      run: npm run format:check --workspace=backend
      
    - name: Test backend
      run: npm run test --workspace=backend
      continue-on-error: true
      
    - name: Build backend
      run: npm run build --workspace=backend

  # Quality checks and tests for frontend (when it exists)
  frontend-ci:
    name: Frontend CI
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true' || needs.detect-changes.outputs.root == 'true'
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    defaults:
      run:
        working-directory: ./
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check if frontend exists
      id: frontend-exists
      run: |
        if [ -f "frontend/package.json" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
      
    - name: Type check frontend
      if: steps.frontend-exists.outputs.exists == 'true'
      run: npm run type-check --workspace=frontend
      
    - name: Lint frontend
      if: steps.frontend-exists.outputs.exists == 'true'
      run: npm run lint --workspace=frontend
      
    - name: Format check frontend
      if: steps.frontend-exists.outputs.exists == 'true'
      run: npm run format:check --workspace=frontend
      
    - name: Test frontend
      if: steps.frontend-exists.outputs.exists == 'true'
      run: npm run test --workspace=frontend
      
    - name: Build frontend
      if: steps.frontend-exists.outputs.exists == 'true'
      run: npm run build --workspace=frontend

  # Overall quality check (runs on one Node version only for efficiency)
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [detect-changes]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run full type check
      run: npm run type-check
      
    - name: Run full format check
      run: npm run format:check
      
    - name: Build all packages
      run: npm run build